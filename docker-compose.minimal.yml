# EasyPay Payment Gateway - Minimal Docker Compose
# This version includes only the essential services for development

services:
  # EasyPay API Service
  easypay-api:
    build: .
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8000:8000"  # Direct API access
    environment:
      - DATABASE_URL=postgresql://easypay:password@postgres:5432/easypay
      - REDIS_URL=redis://redis:6379/0
      - AUTHORIZE_NET_API_LOGIN_ID=${AUTHORIZE_NET_API_LOGIN_ID}
      - AUTHORIZE_NET_TRANSACTION_KEY=${AUTHORIZE_NET_TRANSACTION_KEY}
      - AUTHORIZE_NET_SANDBOX=${AUTHORIZE_NET_SANDBOX:-true}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src:/app/src
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=easypay
      - POSTGRES_USER=easypay
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
